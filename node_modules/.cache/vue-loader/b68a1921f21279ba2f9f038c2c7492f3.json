{"remainingRequest":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\src\\components\\board.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\src\\components\\board.vue","mtime":1622384106430},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgY2VsbCBmcm9tICIuL2NlbGwudnVlIjsNCmltcG9ydCBCb2FyZCBmcm9tICIuLi9qcy9ib2FyZCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIGNlbGwsDQogIH0sDQogIHByb3BzOiB7DQogICAgbGV2ZWw6IFN0cmluZywNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZ2FtZU92ZXI6IGZhbHNlLA0KICAgICAgZ2FtZU92ZXJUZXh0OiAiIiwNCiAgICAgIGJvYXJkOiBuZXcgQm9hcmQoKSwNCiAgICAgIGRpZmZMZXZlbDogdGhpcy5sZXZlbCwNCiAgICB9Ow0KICB9LA0KICB3YXRjaDogew0KICAgIGxldmVsOiBmdW5jdGlvbiAoKSB7DQogICAgICB0aGlzLmRpZmZMZXZlbCA9IHRoaXMubGV2ZWw7DQogICAgICB0aGlzLmdhbWVPdmVyID0gZmFsc2U7DQogICAgICB0aGlzLmJvYXJkLnJlc2V0KCk7DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHJlc3RhcnQoKSB7DQogICAgICB0aGlzLmdhbWVPdmVyID0gZmFsc2U7DQogICAgICB0aGlzLmJvYXJkLnJlc2V0KCk7DQogICAgfSwNCiAgICBzZWxlY3RlZCh4LCB5KSB7DQogICAgICBpZiAodGhpcy5nYW1lT3Zlcikgew0KICAgICAgICAvLyBJbnZhbGlkIG1vdmUuDQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIGlmICghdGhpcy5ib2FyZC5kb01vdmUoeCwgeSwgIngiKSkgew0KICAgICAgICAvLyBJbnZhbGlkIG1vdmUuDQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7DQoNCiAgICAgIGlmICh0aGlzLmJvYXJkLmlzR2FtZU92ZXIoKSkgew0KICAgICAgICB0aGlzLmdhbWVPdmVyID0gdHJ1ZTsNCiAgICAgICAgdGhpcy5nYW1lT3ZlclRleHQgPSB0aGlzLmJvYXJkLnBsYXllckhhczNJbkFSb3coIngiKQ0KICAgICAgICAgID8gIllvdSB3aW4hIg0KICAgICAgICAgIDogIkRyYXciOw0KICAgICAgICByZXR1cm47DQogICAgICB9DQoNCiAgICAgIGxldCBhaU1vdmUgPQ0KICAgICAgICB0aGlzLmRpZmZMZXZlbCA9PT0gIkVhc3kiDQogICAgICAgICAgPyB0aGlzLnJhbmRNYXgodGhpcy5ib2FyZC5jbG9uZSgpLCAibyIpDQogICAgICAgICAgOiB0aGlzLm1pbmltYXgodGhpcy5ib2FyZC5jbG9uZSgpLCAibyIpOw0KDQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgdGhpcy5ib2FyZC5kb01vdmUoYWlNb3ZlLm1vdmUueCwgYWlNb3ZlLm1vdmUueSwgIm8iKTsNCiAgICAgICAgaWYgKHRoaXMuYm9hcmQuaXNHYW1lT3ZlcigpKSB7DQogICAgICAgICAgdGhpcy5nYW1lT3ZlciA9IHRydWU7DQogICAgICAgICAgdGhpcy5nYW1lT3ZlclRleHQgPSB0aGlzLmJvYXJkLnBsYXllckhhczNJbkFSb3coIm8iKQ0KICAgICAgICAgICAgPyAiWW91IGxvc2UhIENISUJJISEhIg0KICAgICAgICAgICAgOiAiRHJhdyI7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsNCiAgICAgIH0sIDQwMCk7DQogICAgfSwNCg0KICAgIG1pbmltYXgoYm9hcmQsIHBsYXllciwgZGVwdGggPSAxKSB7DQogICAgICAvLyBJZiB0aGUgYm9hcmQgaGFzIDMgaW4gYSByb3cgcmV0dXJuIHRoZSBzY29yZSBvZiB0aGUgYm9hcmQuDQogICAgICBpZiAoYm9hcmQuaXNHYW1lT3ZlcigpKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgc2NvcmU6IGJvYXJkLmdldFNjb3JlKCkgKyBkZXB0aCwNCiAgICAgICAgICBtb3ZlOiBudWxsLA0KICAgICAgICB9Ow0KICAgICAgfQ0KDQogICAgICAvLyBUaGUgJ28nIHBsYXllciB3YW50cyB0byBtYXhpbWl6ZSBpdHMgc2NvcmUsIHRoZSAneCcgcGxheWVyIHdhbnRzIHRvDQogICAgICAvLyBtaW5pbWl6ZSBpdHMgc2NvcmUNCiAgICAgIGxldCBiZXN0U2NvcmUgPSBwbGF5ZXIgPT09ICJvIiA/IC0xMDAwMCA6IDEwMDAwOw0KICAgICAgbGV0IGJlc3RNb3ZlID0gbnVsbDsNCg0KICAgICAgbGV0IG1vdmVzID0gYm9hcmQuZ2V0UG9zc2libGVNb3ZlcygpOw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtb3Zlcy5sZW5ndGg7IGkrKykgew0KICAgICAgICBsZXQgbW92ZSA9IG1vdmVzW2ldOw0KICAgICAgICBsZXQgbmV3Qm9hcmQgPSBib2FyZC5jbG9uZSgpOw0KICAgICAgICBuZXdCb2FyZC5kb01vdmUobW92ZS54LCBtb3ZlLnksIHBsYXllcik7DQoNCiAgICAgICAgLy8gUmVjdXJzaXZlbHkgY2FsbCB0aGUgbWluaW1heCBmdW5jdGlvbiBmb3IgdGhlIG5ldyBib2FyZC4NCiAgICAgICAgY29uc3Qgc2NvcmUgPSB0aGlzLm1pbmltYXgoDQogICAgICAgICAgbmV3Qm9hcmQsDQogICAgICAgICAgcGxheWVyID09PSAieCIgPyAibyIgOiAieCIsDQogICAgICAgICAgZGVwdGggKyAxDQogICAgICAgICkuc2NvcmU7DQoNCiAgICAgICAgLy8gSWYgdGhlIHNjb3JlIGlzIGJldHRlciB0aGFuIHRoZSBiZXN0IHNhdmVkIHNjb3JlIHVwZGF0ZSB0aGUgYmVzdCBzYXZlZA0KICAgICAgICAvLyBzY29yZSB0byB0aGlzIG1vdmUuDQogICAgICAgIGlmICgNCiAgICAgICAgICAocGxheWVyID09PSAibyIgJiYgc2NvcmUgPiBiZXN0U2NvcmUpIHx8DQogICAgICAgICAgKHBsYXllciA9PT0gIngiICYmIHNjb3JlIDwgYmVzdFNjb3JlKQ0KICAgICAgICApIHsNCiAgICAgICAgICBiZXN0U2NvcmUgPSBzY29yZTsNCiAgICAgICAgICBiZXN0TW92ZSA9IG1vdmU7DQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgLy8gUmV0dXJuIHRoZSBiZXN0IGZvdW5kIHNjb3JlICYgbW92ZSENCiAgICAgIHJldHVybiB7DQogICAgICAgIHNjb3JlOiBiZXN0U2NvcmUsDQogICAgICAgIG1vdmU6IGJlc3RNb3ZlLA0KICAgICAgfTsNCiAgICB9LA0KDQogICAgcmFuZE1heChib2FyZCwgcGxheWVyKSB7DQogICAgICAvLyBJZiB0aGUgYm9hcmQgaGFzIDMgaW4gYSByb3cgcmV0dXJuIHRoZSBzY29yZSBvZiB0aGUgYm9hcmQuDQogICAgICBpZiAoYm9hcmQuaXNHYW1lT3ZlcigpKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgc2NvcmU6IGJvYXJkLmdldFNjb3JlKCksDQogICAgICAgICAgbW92ZTogbnVsbCwNCiAgICAgICAgfTsNCiAgICAgIH0NCiAgICAgIC8vIFRoZSAnbycgcGxheWVyIHdhbnRzIHRvIG1heGltaXplIGl0cyBzY29yZSwgdGhlICd4JyBwbGF5ZXIgd2FudHMgdG8NCiAgICAgIC8vIG1pbmltaXplIGl0cyBzY29yZQ0KICAgICAgbGV0IGJlc3RTY29yZSA9IHBsYXllciA9PT0gIm8iID8gLTEwMDAwIDogMTAwMDA7DQogICAgICBsZXQgYmVzdE1vdmUgPSBudWxsOw0KDQogICAgICBsZXQgbW92ZXMgPSBib2FyZC5nZXRQb3NzaWJsZU1vdmVzKCk7DQogICAgICBsZXQgbW92ZUludCA9IGJvYXJkLmdldFJhbmRvbUludCgwLCBtb3Zlcy5sZW5ndGggLSAxKTsNCg0KICAgICAgYmVzdE1vdmUgPSBtb3Zlc1ttb3ZlSW50XTsNCiAgICAgIGJlc3RTY29yZSA9IC0xMDAwMDsNCg0KICAgICAgLy8gUmV0dXJuIHRoZSBiZXN0IGZvdW5kIHNjb3JlICYgbW92ZSENCiAgICAgIHJldHVybiB7DQogICAgICAgIHNjb3JlOiBiZXN0U2NvcmUsDQogICAgICAgIG1vdmU6IGJlc3RNb3ZlLA0KICAgICAgfTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"board.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"board-area\">\r\n    <div class=\"game-over-text\" v-if=\"gameOver\">\r\n      <h3>{{ gameOverText }}</h3>\r\n    </div>\r\n    <div class=\"board-wrap\">\r\n      <div class=\"tictactoe-board\" v-if=\"!gameOver\">\r\n        <div v-for=\"x in 3\" :key=\"x\">\r\n          <div v-for=\"y in 3\" :key=\"y\">\r\n            <cell\r\n              @click=\"selected(x - 1, y - 1)\"\r\n              :value=\"board.cells[x - 1][y - 1]\"\r\n            ></cell>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"restart\" @click=\"restart()\">\r\n      <h3>Restart</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport cell from \"./cell.vue\";\r\nimport Board from \"../js/board\";\r\n\r\nexport default {\r\n  components: {\r\n    cell,\r\n  },\r\n  props: {\r\n    level: String,\r\n  },\r\n  data() {\r\n    return {\r\n      gameOver: false,\r\n      gameOverText: \"\",\r\n      board: new Board(),\r\n      diffLevel: this.level,\r\n    };\r\n  },\r\n  watch: {\r\n    level: function () {\r\n      this.diffLevel = this.level;\r\n      this.gameOver = false;\r\n      this.board.reset();\r\n    },\r\n  },\r\n  methods: {\r\n    restart() {\r\n      this.gameOver = false;\r\n      this.board.reset();\r\n    },\r\n    selected(x, y) {\r\n      if (this.gameOver) {\r\n        // Invalid move.\r\n        return;\r\n      }\r\n      if (!this.board.doMove(x, y, \"x\")) {\r\n        // Invalid move.\r\n        return;\r\n      }\r\n      this.$forceUpdate();\r\n\r\n      if (this.board.isGameOver()) {\r\n        this.gameOver = true;\r\n        this.gameOverText = this.board.playerHas3InARow(\"x\")\r\n          ? \"You win!\"\r\n          : \"Draw\";\r\n        return;\r\n      }\r\n\r\n      let aiMove =\r\n        this.diffLevel === \"Easy\"\r\n          ? this.randMax(this.board.clone(), \"o\")\r\n          : this.minimax(this.board.clone(), \"o\");\r\n\r\n      setTimeout(() => {\r\n        this.board.doMove(aiMove.move.x, aiMove.move.y, \"o\");\r\n        if (this.board.isGameOver()) {\r\n          this.gameOver = true;\r\n          this.gameOverText = this.board.playerHas3InARow(\"o\")\r\n            ? \"You lose! CHIBI!!!\"\r\n            : \"Draw\";\r\n        }\r\n        this.$forceUpdate();\r\n      }, 400);\r\n    },\r\n\r\n    minimax(board, player, depth = 1) {\r\n      // If the board has 3 in a row return the score of the board.\r\n      if (board.isGameOver()) {\r\n        return {\r\n          score: board.getScore() + depth,\r\n          move: null,\r\n        };\r\n      }\r\n\r\n      // The 'o' player wants to maximize its score, the 'x' player wants to\r\n      // minimize its score\r\n      let bestScore = player === \"o\" ? -10000 : 10000;\r\n      let bestMove = null;\r\n\r\n      let moves = board.getPossibleMoves();\r\n      for (let i = 0; i < moves.length; i++) {\r\n        let move = moves[i];\r\n        let newBoard = board.clone();\r\n        newBoard.doMove(move.x, move.y, player);\r\n\r\n        // Recursively call the minimax function for the new board.\r\n        const score = this.minimax(\r\n          newBoard,\r\n          player === \"x\" ? \"o\" : \"x\",\r\n          depth + 1\r\n        ).score;\r\n\r\n        // If the score is better than the best saved score update the best saved\r\n        // score to this move.\r\n        if (\r\n          (player === \"o\" && score > bestScore) ||\r\n          (player === \"x\" && score < bestScore)\r\n        ) {\r\n          bestScore = score;\r\n          bestMove = move;\r\n        }\r\n      }\r\n\r\n      // Return the best found score & move!\r\n      return {\r\n        score: bestScore,\r\n        move: bestMove,\r\n      };\r\n    },\r\n\r\n    randMax(board, player) {\r\n      // If the board has 3 in a row return the score of the board.\r\n      if (board.isGameOver()) {\r\n        return {\r\n          score: board.getScore(),\r\n          move: null,\r\n        };\r\n      }\r\n      // The 'o' player wants to maximize its score, the 'x' player wants to\r\n      // minimize its score\r\n      let bestScore = player === \"o\" ? -10000 : 10000;\r\n      let bestMove = null;\r\n\r\n      let moves = board.getPossibleMoves();\r\n      let moveInt = board.getRandomInt(0, moves.length - 1);\r\n\r\n      bestMove = moves[moveInt];\r\n      bestScore = -10000;\r\n\r\n      // Return the best found score & move!\r\n      return {\r\n        score: bestScore,\r\n        move: bestMove,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.game-over-text {\r\n  /* margin: 5%; */\r\n  font-size: 10vw;\r\n}\r\n.board-area {\r\n  /* margin: 5%; */\r\n  /* display: flex; */\r\n}\r\n.restart {\r\n  /* margin: 5%; */\r\n  /* display: inline-flex; */\r\n  /* justify-content: left; */\r\n  flex: 1;\r\n}\r\n.board-wrap {\r\n  /* margin: 5%; */\r\n  /* display: inline-flex; */\r\n  /* justify-content: left; */\r\n  /* flex: 1; */\r\n}\r\n.tictactoe-board {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n\r\n  display: flex;\r\n  background-color: #866488;\r\n  border-radius: 2%;\r\n  padding: 1em;\r\n  box-shadow: inset -0.25em -0.25em 0.5em #866488,\r\n    inset 0.25em 0.25em 0.5em #A28BA4, 0 0.5em 2em black;\r\n}\r\n</style>"]}]}