{"remainingRequest":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\src\\components\\board.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\src\\components\\board.vue","mtime":1622384106430},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNlbGwgZnJvbSAiLi9jZWxsLnZ1ZSI7CmltcG9ydCBCb2FyZCBmcm9tICIuLi9qcy9ib2FyZCI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBjZWxsCiAgfSwKICBwcm9wczogewogICAgbGV2ZWw6IFN0cmluZwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBnYW1lT3ZlcjogZmFsc2UsCiAgICAgIGdhbWVPdmVyVGV4dDogIiIsCiAgICAgIGJvYXJkOiBuZXcgQm9hcmQoKSwKICAgICAgZGlmZkxldmVsOiB0aGlzLmxldmVsCiAgICB9OwogIH0sCgogIHdhdGNoOiB7CiAgICBsZXZlbDogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmRpZmZMZXZlbCA9IHRoaXMubGV2ZWw7CiAgICAgIHRoaXMuZ2FtZU92ZXIgPSBmYWxzZTsKICAgICAgdGhpcy5ib2FyZC5yZXNldCgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVzdGFydCgpIHsKICAgICAgdGhpcy5nYW1lT3ZlciA9IGZhbHNlOwogICAgICB0aGlzLmJvYXJkLnJlc2V0KCk7CiAgICB9LAoKICAgIHNlbGVjdGVkKHgsIHkpIHsKICAgICAgaWYgKHRoaXMuZ2FtZU92ZXIpIHsKICAgICAgICAvLyBJbnZhbGlkIG1vdmUuCiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoIXRoaXMuYm9hcmQuZG9Nb3ZlKHgsIHksICJ4IikpIHsKICAgICAgICAvLyBJbnZhbGlkIG1vdmUuCiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwoKICAgICAgaWYgKHRoaXMuYm9hcmQuaXNHYW1lT3ZlcigpKSB7CiAgICAgICAgdGhpcy5nYW1lT3ZlciA9IHRydWU7CiAgICAgICAgdGhpcy5nYW1lT3ZlclRleHQgPSB0aGlzLmJvYXJkLnBsYXllckhhczNJbkFSb3coIngiKSA/ICJZb3Ugd2luISIgOiAiRHJhdyI7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBsZXQgYWlNb3ZlID0gdGhpcy5kaWZmTGV2ZWwgPT09ICJFYXN5IiA/IHRoaXMucmFuZE1heCh0aGlzLmJvYXJkLmNsb25lKCksICJvIikgOiB0aGlzLm1pbmltYXgodGhpcy5ib2FyZC5jbG9uZSgpLCAibyIpOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmJvYXJkLmRvTW92ZShhaU1vdmUubW92ZS54LCBhaU1vdmUubW92ZS55LCAibyIpOwoKICAgICAgICBpZiAodGhpcy5ib2FyZC5pc0dhbWVPdmVyKCkpIHsKICAgICAgICAgIHRoaXMuZ2FtZU92ZXIgPSB0cnVlOwogICAgICAgICAgdGhpcy5nYW1lT3ZlclRleHQgPSB0aGlzLmJvYXJkLnBsYXllckhhczNJbkFSb3coIm8iKSA/ICJZb3UgbG9zZSEgQ0hJQkkhISEiIDogIkRyYXciOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsKICAgICAgfSwgNDAwKTsKICAgIH0sCgogICAgbWluaW1heChib2FyZCwgcGxheWVyLCBkZXB0aCA9IDEpIHsKICAgICAgLy8gSWYgdGhlIGJvYXJkIGhhcyAzIGluIGEgcm93IHJldHVybiB0aGUgc2NvcmUgb2YgdGhlIGJvYXJkLgogICAgICBpZiAoYm9hcmQuaXNHYW1lT3ZlcigpKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNjb3JlOiBib2FyZC5nZXRTY29yZSgpICsgZGVwdGgsCiAgICAgICAgICBtb3ZlOiBudWxsCiAgICAgICAgfTsKICAgICAgfSAvLyBUaGUgJ28nIHBsYXllciB3YW50cyB0byBtYXhpbWl6ZSBpdHMgc2NvcmUsIHRoZSAneCcgcGxheWVyIHdhbnRzIHRvCiAgICAgIC8vIG1pbmltaXplIGl0cyBzY29yZQoKCiAgICAgIGxldCBiZXN0U2NvcmUgPSBwbGF5ZXIgPT09ICJvIiA/IC0xMDAwMCA6IDEwMDAwOwogICAgICBsZXQgYmVzdE1vdmUgPSBudWxsOwogICAgICBsZXQgbW92ZXMgPSBib2FyZC5nZXRQb3NzaWJsZU1vdmVzKCk7CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1vdmVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IG1vdmUgPSBtb3Zlc1tpXTsKICAgICAgICBsZXQgbmV3Qm9hcmQgPSBib2FyZC5jbG9uZSgpOwogICAgICAgIG5ld0JvYXJkLmRvTW92ZShtb3ZlLngsIG1vdmUueSwgcGxheWVyKTsgLy8gUmVjdXJzaXZlbHkgY2FsbCB0aGUgbWluaW1heCBmdW5jdGlvbiBmb3IgdGhlIG5ldyBib2FyZC4KCiAgICAgICAgY29uc3Qgc2NvcmUgPSB0aGlzLm1pbmltYXgobmV3Qm9hcmQsIHBsYXllciA9PT0gIngiID8gIm8iIDogIngiLCBkZXB0aCArIDEpLnNjb3JlOyAvLyBJZiB0aGUgc2NvcmUgaXMgYmV0dGVyIHRoYW4gdGhlIGJlc3Qgc2F2ZWQgc2NvcmUgdXBkYXRlIHRoZSBiZXN0IHNhdmVkCiAgICAgICAgLy8gc2NvcmUgdG8gdGhpcyBtb3ZlLgoKICAgICAgICBpZiAocGxheWVyID09PSAibyIgJiYgc2NvcmUgPiBiZXN0U2NvcmUgfHwgcGxheWVyID09PSAieCIgJiYgc2NvcmUgPCBiZXN0U2NvcmUpIHsKICAgICAgICAgIGJlc3RTY29yZSA9IHNjb3JlOwogICAgICAgICAgYmVzdE1vdmUgPSBtb3ZlOwogICAgICAgIH0KICAgICAgfSAvLyBSZXR1cm4gdGhlIGJlc3QgZm91bmQgc2NvcmUgJiBtb3ZlIQoKCiAgICAgIHJldHVybiB7CiAgICAgICAgc2NvcmU6IGJlc3RTY29yZSwKICAgICAgICBtb3ZlOiBiZXN0TW92ZQogICAgICB9OwogICAgfSwKCiAgICByYW5kTWF4KGJvYXJkLCBwbGF5ZXIpIHsKICAgICAgLy8gSWYgdGhlIGJvYXJkIGhhcyAzIGluIGEgcm93IHJldHVybiB0aGUgc2NvcmUgb2YgdGhlIGJvYXJkLgogICAgICBpZiAoYm9hcmQuaXNHYW1lT3ZlcigpKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNjb3JlOiBib2FyZC5nZXRTY29yZSgpLAogICAgICAgICAgbW92ZTogbnVsbAogICAgICAgIH07CiAgICAgIH0gLy8gVGhlICdvJyBwbGF5ZXIgd2FudHMgdG8gbWF4aW1pemUgaXRzIHNjb3JlLCB0aGUgJ3gnIHBsYXllciB3YW50cyB0bwogICAgICAvLyBtaW5pbWl6ZSBpdHMgc2NvcmUKCgogICAgICBsZXQgYmVzdFNjb3JlID0gcGxheWVyID09PSAibyIgPyAtMTAwMDAgOiAxMDAwMDsKICAgICAgbGV0IGJlc3RNb3ZlID0gbnVsbDsKICAgICAgbGV0IG1vdmVzID0gYm9hcmQuZ2V0UG9zc2libGVNb3ZlcygpOwogICAgICBsZXQgbW92ZUludCA9IGJvYXJkLmdldFJhbmRvbUludCgwLCBtb3Zlcy5sZW5ndGggLSAxKTsKICAgICAgYmVzdE1vdmUgPSBtb3Zlc1ttb3ZlSW50XTsKICAgICAgYmVzdFNjb3JlID0gLTEwMDAwOyAvLyBSZXR1cm4gdGhlIGJlc3QgZm91bmQgc2NvcmUgJiBtb3ZlIQoKICAgICAgcmV0dXJuIHsKICAgICAgICBzY29yZTogYmVzdFNjb3JlLAogICAgICAgIG1vdmU6IGJlc3RNb3ZlCiAgICAgIH07CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["board.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"board-area\">\r\n    <div class=\"game-over-text\" v-if=\"gameOver\">\r\n      <h3>{{ gameOverText }}</h3>\r\n    </div>\r\n    <div class=\"board-wrap\">\r\n      <div class=\"tictactoe-board\" v-if=\"!gameOver\">\r\n        <div v-for=\"x in 3\" :key=\"x\">\r\n          <div v-for=\"y in 3\" :key=\"y\">\r\n            <cell\r\n              @click=\"selected(x - 1, y - 1)\"\r\n              :value=\"board.cells[x - 1][y - 1]\"\r\n            ></cell>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"restart\" @click=\"restart()\">\r\n      <h3>Restart</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport cell from \"./cell.vue\";\r\nimport Board from \"../js/board\";\r\n\r\nexport default {\r\n  components: {\r\n    cell,\r\n  },\r\n  props: {\r\n    level: String,\r\n  },\r\n  data() {\r\n    return {\r\n      gameOver: false,\r\n      gameOverText: \"\",\r\n      board: new Board(),\r\n      diffLevel: this.level,\r\n    };\r\n  },\r\n  watch: {\r\n    level: function () {\r\n      this.diffLevel = this.level;\r\n      this.gameOver = false;\r\n      this.board.reset();\r\n    },\r\n  },\r\n  methods: {\r\n    restart() {\r\n      this.gameOver = false;\r\n      this.board.reset();\r\n    },\r\n    selected(x, y) {\r\n      if (this.gameOver) {\r\n        // Invalid move.\r\n        return;\r\n      }\r\n      if (!this.board.doMove(x, y, \"x\")) {\r\n        // Invalid move.\r\n        return;\r\n      }\r\n      this.$forceUpdate();\r\n\r\n      if (this.board.isGameOver()) {\r\n        this.gameOver = true;\r\n        this.gameOverText = this.board.playerHas3InARow(\"x\")\r\n          ? \"You win!\"\r\n          : \"Draw\";\r\n        return;\r\n      }\r\n\r\n      let aiMove =\r\n        this.diffLevel === \"Easy\"\r\n          ? this.randMax(this.board.clone(), \"o\")\r\n          : this.minimax(this.board.clone(), \"o\");\r\n\r\n      setTimeout(() => {\r\n        this.board.doMove(aiMove.move.x, aiMove.move.y, \"o\");\r\n        if (this.board.isGameOver()) {\r\n          this.gameOver = true;\r\n          this.gameOverText = this.board.playerHas3InARow(\"o\")\r\n            ? \"You lose! CHIBI!!!\"\r\n            : \"Draw\";\r\n        }\r\n        this.$forceUpdate();\r\n      }, 400);\r\n    },\r\n\r\n    minimax(board, player, depth = 1) {\r\n      // If the board has 3 in a row return the score of the board.\r\n      if (board.isGameOver()) {\r\n        return {\r\n          score: board.getScore() + depth,\r\n          move: null,\r\n        };\r\n      }\r\n\r\n      // The 'o' player wants to maximize its score, the 'x' player wants to\r\n      // minimize its score\r\n      let bestScore = player === \"o\" ? -10000 : 10000;\r\n      let bestMove = null;\r\n\r\n      let moves = board.getPossibleMoves();\r\n      for (let i = 0; i < moves.length; i++) {\r\n        let move = moves[i];\r\n        let newBoard = board.clone();\r\n        newBoard.doMove(move.x, move.y, player);\r\n\r\n        // Recursively call the minimax function for the new board.\r\n        const score = this.minimax(\r\n          newBoard,\r\n          player === \"x\" ? \"o\" : \"x\",\r\n          depth + 1\r\n        ).score;\r\n\r\n        // If the score is better than the best saved score update the best saved\r\n        // score to this move.\r\n        if (\r\n          (player === \"o\" && score > bestScore) ||\r\n          (player === \"x\" && score < bestScore)\r\n        ) {\r\n          bestScore = score;\r\n          bestMove = move;\r\n        }\r\n      }\r\n\r\n      // Return the best found score & move!\r\n      return {\r\n        score: bestScore,\r\n        move: bestMove,\r\n      };\r\n    },\r\n\r\n    randMax(board, player) {\r\n      // If the board has 3 in a row return the score of the board.\r\n      if (board.isGameOver()) {\r\n        return {\r\n          score: board.getScore(),\r\n          move: null,\r\n        };\r\n      }\r\n      // The 'o' player wants to maximize its score, the 'x' player wants to\r\n      // minimize its score\r\n      let bestScore = player === \"o\" ? -10000 : 10000;\r\n      let bestMove = null;\r\n\r\n      let moves = board.getPossibleMoves();\r\n      let moveInt = board.getRandomInt(0, moves.length - 1);\r\n\r\n      bestMove = moves[moveInt];\r\n      bestScore = -10000;\r\n\r\n      // Return the best found score & move!\r\n      return {\r\n        score: bestScore,\r\n        move: bestMove,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.game-over-text {\r\n  /* margin: 5%; */\r\n  font-size: 10vw;\r\n}\r\n.board-area {\r\n  /* margin: 5%; */\r\n  /* display: flex; */\r\n}\r\n.restart {\r\n  /* margin: 5%; */\r\n  /* display: inline-flex; */\r\n  /* justify-content: left; */\r\n  flex: 1;\r\n}\r\n.board-wrap {\r\n  /* margin: 5%; */\r\n  /* display: inline-flex; */\r\n  /* justify-content: left; */\r\n  /* flex: 1; */\r\n}\r\n.tictactoe-board {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n\r\n  display: flex;\r\n  background-color: #866488;\r\n  border-radius: 2%;\r\n  padding: 1em;\r\n  box-shadow: inset -0.25em -0.25em 0.5em #866488,\r\n    inset 0.25em 0.25em 0.5em #A28BA4, 0 0.5em 2em black;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}