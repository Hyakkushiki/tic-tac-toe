{"remainingRequest":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\src\\components\\board.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\src\\components\\board.vue","mtime":1621774645898},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\CJ\\Documents\\GitHub\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNlbGwgZnJvbSAiLi9jZWxsLnZ1ZSI7CmltcG9ydCBCb2FyZCBmcm9tICIuLi9qcy9ib2FyZCI7IC8vIGltcG9ydCBkaWZmaWN1bHR5IGZyb20gIi4vZGlmZmljdWx0eS52dWUiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIGNlbGwKICB9LAogIHByb3BzOiB7CiAgICBsZXZlbDogU3RyaW5nCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdhbWVPdmVyOiBmYWxzZSwKICAgICAgZ2FtZU92ZXJUZXh0OiAiIiwKICAgICAgYm9hcmQ6IG5ldyBCb2FyZCgpLAogICAgICBkaWZmTGV2ZWw6IHRoaXMubGV2ZWwKICAgIH07CiAgfSwKCiAgd2F0Y2g6IHsKICAgIGxldmVsOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuZGlmZkxldmVsID0gdGhpcy5sZXZlbDsKICAgICAgdGhpcy5nYW1lT3ZlciA9IGZhbHNlOwogICAgICB0aGlzLmJvYXJkLnJlc2V0KCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXN0YXJ0KCkgewogICAgICB0aGlzLmdhbWVPdmVyID0gZmFsc2U7CiAgICAgIHRoaXMuYm9hcmQucmVzZXQoKTsKICAgIH0sCgogICAgc2VsZWN0ZWQoeCwgeSkgewogICAgICBpZiAodGhpcy5nYW1lT3ZlcikgewogICAgICAgIC8vIEludmFsaWQgbW92ZS4KICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5ib2FyZC5kb01vdmUoeCwgeSwgIngiKSkgewogICAgICAgIC8vIEludmFsaWQgbW92ZS4KICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CgogICAgICBpZiAodGhpcy5ib2FyZC5pc0dhbWVPdmVyKCkpIHsKICAgICAgICB0aGlzLmdhbWVPdmVyID0gdHJ1ZTsKICAgICAgICB0aGlzLmdhbWVPdmVyVGV4dCA9IHRoaXMuYm9hcmQucGxheWVySGFzM0luQVJvdygieCIpID8gIllvdSB3aW4hIiA6ICJEcmF3IjsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGxldCBhaU1vdmUgPSB0aGlzLmRpZmZMZXZlbCA9PT0gIkVhc3kiID8gdGhpcy5yYW5kTWF4KHRoaXMuYm9hcmQuY2xvbmUoKSwgIm8iKSA6IHRoaXMubWluaW1heCh0aGlzLmJvYXJkLmNsb25lKCksICJvIik7CiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuYm9hcmQuZG9Nb3ZlKGFpTW92ZS5tb3ZlLngsIGFpTW92ZS5tb3ZlLnksICJvIik7CgogICAgICAgIGlmICh0aGlzLmJvYXJkLmlzR2FtZU92ZXIoKSkgewogICAgICAgICAgdGhpcy5nYW1lT3ZlciA9IHRydWU7CiAgICAgICAgICB0aGlzLmdhbWVPdmVyVGV4dCA9IHRoaXMuYm9hcmQucGxheWVySGFzM0luQVJvdygibyIpID8gIllvdSBsb3NlISBDSElCSSEhISIgOiAiRHJhdyI7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgICB9LCA0MDApOwogICAgfSwKCiAgICBtaW5pbWF4KGJvYXJkLCBwbGF5ZXIsIGRlcHRoID0gMSkgewogICAgICAvLyBJZiB0aGUgYm9hcmQgaGFzIDMgaW4gYSByb3cgcmV0dXJuIHRoZSBzY29yZSBvZiB0aGUgYm9hcmQuCiAgICAgIGlmIChib2FyZC5pc0dhbWVPdmVyKCkpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgc2NvcmU6IGJvYXJkLmdldFNjb3JlKCkgKyBkZXB0aCwKICAgICAgICAgIG1vdmU6IG51bGwKICAgICAgICB9OwogICAgICB9IC8vIFRoZSAnbycgcGxheWVyIHdhbnRzIHRvIG1heGltaXplIGl0cyBzY29yZSwgdGhlICd4JyBwbGF5ZXIgd2FudHMgdG8KICAgICAgLy8gbWluaW1pemUgaXRzIHNjb3JlCgoKICAgICAgbGV0IGJlc3RTY29yZSA9IHBsYXllciA9PT0gIm8iID8gLTEwMDAwIDogMTAwMDA7CiAgICAgIGxldCBiZXN0TW92ZSA9IG51bGw7CiAgICAgIGxldCBtb3ZlcyA9IGJvYXJkLmdldFBvc3NpYmxlTW92ZXMoKTsKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbW92ZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBsZXQgbW92ZSA9IG1vdmVzW2ldOwogICAgICAgIGxldCBuZXdCb2FyZCA9IGJvYXJkLmNsb25lKCk7CiAgICAgICAgbmV3Qm9hcmQuZG9Nb3ZlKG1vdmUueCwgbW92ZS55LCBwbGF5ZXIpOyAvLyBSZWN1cnNpdmVseSBjYWxsIHRoZSBtaW5pbWF4IGZ1bmN0aW9uIGZvciB0aGUgbmV3IGJvYXJkLgoKICAgICAgICBjb25zdCBzY29yZSA9IHRoaXMubWluaW1heChuZXdCb2FyZCwgcGxheWVyID09PSAieCIgPyAibyIgOiAieCIsIGRlcHRoICsgMSkuc2NvcmU7IC8vIElmIHRoZSBzY29yZSBpcyBiZXR0ZXIgdGhhbiB0aGUgYmVzdCBzYXZlZCBzY29yZSB1cGRhdGUgdGhlIGJlc3Qgc2F2ZWQKICAgICAgICAvLyBzY29yZSB0byB0aGlzIG1vdmUuCgogICAgICAgIGlmIChwbGF5ZXIgPT09ICJvIiAmJiBzY29yZSA+IGJlc3RTY29yZSB8fCBwbGF5ZXIgPT09ICJ4IiAmJiBzY29yZSA8IGJlc3RTY29yZSkgewogICAgICAgICAgYmVzdFNjb3JlID0gc2NvcmU7CiAgICAgICAgICBiZXN0TW92ZSA9IG1vdmU7CiAgICAgICAgfQogICAgICB9IC8vIFJldHVybiB0aGUgYmVzdCBmb3VuZCBzY29yZSAmIG1vdmUhCgoKICAgICAgcmV0dXJuIHsKICAgICAgICBzY29yZTogYmVzdFNjb3JlLAogICAgICAgIG1vdmU6IGJlc3RNb3ZlCiAgICAgIH07CiAgICB9LAoKICAgIHJhbmRNYXgoYm9hcmQsIHBsYXllcikgewogICAgICAvLyBJZiB0aGUgYm9hcmQgaGFzIDMgaW4gYSByb3cgcmV0dXJuIHRoZSBzY29yZSBvZiB0aGUgYm9hcmQuCiAgICAgIGlmIChib2FyZC5pc0dhbWVPdmVyKCkpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgc2NvcmU6IGJvYXJkLmdldFNjb3JlKCksCiAgICAgICAgICBtb3ZlOiBudWxsCiAgICAgICAgfTsKICAgICAgfSAvLyBUaGUgJ28nIHBsYXllciB3YW50cyB0byBtYXhpbWl6ZSBpdHMgc2NvcmUsIHRoZSAneCcgcGxheWVyIHdhbnRzIHRvCiAgICAgIC8vIG1pbmltaXplIGl0cyBzY29yZQoKCiAgICAgIGxldCBiZXN0U2NvcmUgPSBwbGF5ZXIgPT09ICJvIiA/IC0xMDAwMCA6IDEwMDAwOwogICAgICBsZXQgYmVzdE1vdmUgPSBudWxsOwogICAgICBsZXQgbW92ZXMgPSBib2FyZC5nZXRQb3NzaWJsZU1vdmVzKCk7CiAgICAgIGxldCBtb3ZlSW50ID0gYm9hcmQuZ2V0UmFuZG9tSW50KDAsIG1vdmVzLmxlbmd0aCAtIDEpOwogICAgICBiZXN0TW92ZSA9IG1vdmVzW21vdmVJbnRdOwogICAgICBiZXN0U2NvcmUgPSAtMTAwMDA7IC8vIFJldHVybiB0aGUgYmVzdCBmb3VuZCBzY29yZSAmIG1vdmUhCgogICAgICByZXR1cm4gewogICAgICAgIHNjb3JlOiBiZXN0U2NvcmUsCiAgICAgICAgbW92ZTogYmVzdE1vdmUKICAgICAgfTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["board.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"board-area\">\r\n    <div class=\"game-over-text\" v-if=\"gameOver\">\r\n      <h3>{{ gameOverText }}</h3>\r\n    </div>\r\n    <div class=\"board-wrap\">\r\n      <div class=\"tictactoe-board\" v-if=\"!gameOver\">\r\n        <div v-for=\"x in 3\" :key=\"x\">\r\n          <div v-for=\"y in 3\" :key=\"y\">\r\n            <cell\r\n              @click=\"selected(x - 1, y - 1)\"\r\n              :value=\"board.cells[x - 1][y - 1]\"\r\n            ></cell>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"restart\" @click=\"restart()\">\r\n      <h3>Restart</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport cell from \"./cell.vue\";\r\nimport Board from \"../js/board\";\r\n// import difficulty from \"./difficulty.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    cell,\r\n  },\r\n  props: {\r\n    level: String,\r\n  },\r\n  data() {\r\n    return {\r\n      gameOver: false,\r\n      gameOverText: \"\",\r\n      board: new Board(),\r\n      diffLevel: this.level,\r\n    };\r\n  },\r\n  watch: {\r\n    level: function () {\r\n      this.diffLevel = this.level;\r\n      this.gameOver = false;\r\n      this.board.reset();\r\n    },\r\n  },\r\n  methods: {\r\n    restart() {\r\n      this.gameOver = false;\r\n      this.board.reset();\r\n    },\r\n    selected(x, y) {\r\n      if (this.gameOver) {\r\n        // Invalid move.\r\n        return;\r\n      }\r\n      if (!this.board.doMove(x, y, \"x\")) {\r\n        // Invalid move.\r\n        return;\r\n      }\r\n      this.$forceUpdate();\r\n\r\n      if (this.board.isGameOver()) {\r\n        this.gameOver = true;\r\n        this.gameOverText = this.board.playerHas3InARow(\"x\")\r\n          ? \"You win!\"\r\n          : \"Draw\";\r\n        return;\r\n      }\r\n\r\n      let aiMove =\r\n        this.diffLevel === \"Easy\"\r\n          ? this.randMax(this.board.clone(), \"o\")\r\n          : this.minimax(this.board.clone(), \"o\");\r\n\r\n      setTimeout(() => {\r\n        this.board.doMove(aiMove.move.x, aiMove.move.y, \"o\");\r\n        if (this.board.isGameOver()) {\r\n          this.gameOver = true;\r\n          this.gameOverText = this.board.playerHas3InARow(\"o\")\r\n            ? \"You lose! CHIBI!!!\"\r\n            : \"Draw\";\r\n        }\r\n        this.$forceUpdate();\r\n      }, 400);\r\n    },\r\n\r\n    minimax(board, player, depth = 1) {\r\n      // If the board has 3 in a row return the score of the board.\r\n      if (board.isGameOver()) {\r\n        return {\r\n          score: board.getScore() + depth,\r\n          move: null,\r\n        };\r\n      }\r\n\r\n      // The 'o' player wants to maximize its score, the 'x' player wants to\r\n      // minimize its score\r\n      let bestScore = player === \"o\" ? -10000 : 10000;\r\n      let bestMove = null;\r\n\r\n      let moves = board.getPossibleMoves();\r\n      for (let i = 0; i < moves.length; i++) {\r\n        let move = moves[i];\r\n        let newBoard = board.clone();\r\n        newBoard.doMove(move.x, move.y, player);\r\n\r\n        // Recursively call the minimax function for the new board.\r\n        const score = this.minimax(\r\n          newBoard,\r\n          player === \"x\" ? \"o\" : \"x\",\r\n          depth + 1\r\n        ).score;\r\n\r\n        // If the score is better than the best saved score update the best saved\r\n        // score to this move.\r\n        if (\r\n          (player === \"o\" && score > bestScore) ||\r\n          (player === \"x\" && score < bestScore)\r\n        ) {\r\n          bestScore = score;\r\n          bestMove = move;\r\n        }\r\n      }\r\n\r\n      // Return the best found score & move!\r\n      return {\r\n        score: bestScore,\r\n        move: bestMove,\r\n      };\r\n    },\r\n\r\n    randMax(board, player) {\r\n      // If the board has 3 in a row return the score of the board.\r\n      if (board.isGameOver()) {\r\n        return {\r\n          score: board.getScore(),\r\n          move: null,\r\n        };\r\n      }\r\n      // The 'o' player wants to maximize its score, the 'x' player wants to\r\n      // minimize its score\r\n      let bestScore = player === \"o\" ? -10000 : 10000;\r\n      let bestMove = null;\r\n\r\n      let moves = board.getPossibleMoves();\r\n      let moveInt = board.getRandomInt(0, moves.length - 1);\r\n\r\n      bestMove = moves[moveInt];\r\n      bestScore = -10000;\r\n\r\n      // Return the best found score & move!\r\n      return {\r\n        score: bestScore,\r\n        move: bestMove,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.game-over-text {\r\n  margin: 5%;\r\n  font-size: 10vw;\r\n}\r\n.board-area {\r\n  /* margin: 5%; */\r\n  /* display: flex; */\r\n}\r\n.restart {\r\n  /* margin: 5%; */\r\n  /* display: inline-flex; */\r\n  /* justify-content: left; */\r\n  flex: 1;\r\n}\r\n.board-wrap {\r\n  /* margin: 5%; */\r\n  /* display: inline-flex; */\r\n  /* justify-content: left; */\r\n  /* flex: 1; */\r\n}\r\n.tictactoe-board {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n\r\n  display: flex;\r\n  background-color: #866488;\r\n  border-radius: 2%;\r\n  padding: 1em;\r\n  box-shadow: inset -0.25em -0.25em 0.5em #866488,\r\n    inset 0.25em 0.25em 0.5em #A28BA4, 0 0.5em 2em black;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}